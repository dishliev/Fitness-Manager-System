/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fitnessmanagersystem;

import static fitnessmanagersystem.Administrator.jTable2sdad;
import static fitnessmanagersystem.GUI.Panel11;
import static fitnessmanagersystem.SendEmail1.txtto1;

import java.awt.BorderLayout;
import java.awt.GridLayout;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author DISHLIEV
 */
public class BirthDays extends javax.swing.JPanel {

    /**
     * Creates new form BirthDays
     */
    public static String email;
     public static String search = "";
     
    public BirthDays() {
        initComponents();
       findUsers();
    }
      public Connection getConnection()
   {
       Connection con;
    
       try {
           con = DriverManager.getConnection("jdbc:mysql://localhost/fitness-manager-system?characterEncoding=utf8", "root","");
         
           return con;
       } catch (Exception e) {
       
      return null;
       }
      
   }
        public ArrayList<ClientsBirdth> ListUsers(String valToSearch){
            ArrayList<ClientsBirdth> usersList = new ArrayList<>();
          
            Statement st;
            ResultSet rs;
            
            try{
                   Connection con = getConnection();
             st= con.createStatement();
            String searchQuery = "SELECT * FROM  `clients`  WHERE CONCAT(`id`, `firstName`, `lastName`,  `dateOfBirdth`,`sex`,`telephone`,`email` ) LIKE'%"+valToSearch+"%'";
            
         
             
                   rs = st.executeQuery(searchQuery);
             ClientsBirdth user;
             
     
             
             while(rs.next()){
             
                 user = new ClientsBirdth(rs.getInt("id"),rs.getString("firstName"),rs.getString("lastName"), rs.getString("dateOfBirdth"), rs.getString("sex"),rs.getInt("telephone"),rs.getString("email"));
                   usersList.add(user); 
           
         /*    
             rs = st.executeQuery(searchQuery);
             ClientsBirdth user;
             
     
             
             while(rs.next()){
             
                 user = new ClientsBirdth(rs.getInt("id"),rs.getString("firstName"),rs.getString("lastName"), rs.getString("dateOfBirdth"), rs.getString("sex"),rs.getInt("telephone"),rs.getString("email"));
                   usersList.add(user);*/
 /*                  
 String dateOfBirdth =rs.getString("dateOfBirdth");
 SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
 
Calendar c = Calendar.getInstance();
c.setTime(new Date()); // днешна дата
String output = sdf.format(c.getTime());
        
                    
                    
  if(dateOfBirdth.compareTo(output)==0 ){
  System.out.println(dateOfBirdth);
 // findUsers();
     
         
         }
         if(dateOfBirdth.compareTo(output)!=0 ){
       //   findUsers();
          System.out.println(dateOfBirdth);
  
         }*/
                   
             }
            }catch(Exception ex){
                System.out.println(ex.getMessage());
            }
   return usersList;
   
        }
        
        public void findUsers(){
  
               ArrayList<ClientsBirdth> users = ListUsers(search);
               search=jTextField1asdcasdcascd.getText();
               
       DefaultTableModel model = new DefaultTableModel();
       final JTable table = new JTable(model);
      model.setColumnIdentifiers(new Object[]{"ID номер","име","фамилия","дата на раждане","пол","телефон","емайл"});
       Object[] row = new Object[7];
        for (ClientsBirdth user : users) {
            row[0] = user.getID();
            row[1] = user.getFirstName();
            row[2] = user.getLastName();
            row[3] = user.getDateOfBirdth();
            row[4] = user.getSex();
            row[5] = user.getTelephone();
            row[6] = user.getEmail();
             
           
            model.addRow(row);
        }
       asvdasvdjTable1.setModel(model);
    
}
      

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        asvdasvdjTable1 = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jTextField1asdcasdcascd = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        asvdasvdjTable1.setAutoCreateRowSorter(true);
        asvdasvdjTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(asvdasvdjTable1);

        jButton4.setIcon(new javax.swing.ImageIcon("C:\\Users\\DISHLIEV\\Documents\\1\\FitnessManagerSystem\\icons\\email-send-icon-small.png")); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTextField1asdcasdcascd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1asdcasdcascdKeyTyped(evt);
            }
        });

        jButton1.setText("днес");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("след 2 дни");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("всички");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Рожденни дни");

        jButton5.setText("утре");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setIcon(new javax.swing.ImageIcon("C:\\Users\\DISHLIEV\\Documents\\1\\FitnessManagerSystem\\icons\\cancel.png")); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\DISHLIEV\\Documents\\1\\FitnessManagerSystem\\icons\\search-icon.png")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 884, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(184, 184, 184)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField1asdcasdcascd, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jButton4)
                .addGap(64, 64, 64)
                .addComponent(jButton6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addGap(189, 189, 189))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jLabel1)
                    .addComponent(jButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton4)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton6))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jTextField1asdcasdcascd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1asdcasdcascdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1asdcasdcascdKeyTyped
        jTextField1asdcasdcascd.getDocument().addDocumentListener(new DocumentListener() {

            @Override
            public void insertUpdate(DocumentEvent de) {
                findUsers();
            }

            @Override
            public void removeUpdate(DocumentEvent de) {
                findUsers();
            }

            @Override
            public void changedUpdate(DocumentEvent de) {
                findUsers();
            }

        });
    }//GEN-LAST:event_jTextField1asdcasdcascdKeyTyped

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        int row = asvdasvdjTable1.getSelectedRow();

        if(row == -1)
        {
            JOptionPane.showMessageDialog(null,"Изберете клиент!");
        }
        else
        {

            SendEmail1 p1 = new SendEmail1();
            p1.setSize(1000, 500);
            p1.setLocation(0, 0);

            Panel11.setLayout(new GridLayout(0,1));
            Panel11.removeAll();
            Panel11.add(p1,BorderLayout.PAGE_END);
            Panel11.revalidate();
            Panel11.repaint();

            TableModel model = asvdasvdjTable1.getModel();
            int i = asvdasvdjTable1.getSelectedRow();

            BirthDays.email = model.getValueAt(i,6).toString();

            txtto1.setText(email);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM");
        Calendar c = Calendar.getInstance();
        c.setTime(new Date()); // днешна дата
        String output = sdf.format(c.getTime());
        
        search=output;
        findUsers();
        
              
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM");
        
        Calendar c = Calendar.getInstance();
     
        c.setTime(new Date()); // Now use today date.

        String s2 = "2";
            
        Integer s1=Integer.valueOf(s2);
        
        c.add(Calendar.DATE, s1); // Adding days
        
        String output = sdf.format(c.getTime());

        search=output;
     
        findUsers();
     
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
           SimpleDateFormat sdf = new SimpleDateFormat("dd/MM");
        
        Calendar c = Calendar.getInstance();
     
        c.setTime(new Date()); // Now use today date.

        String s2 = "1";
            
        Integer s1=Integer.valueOf(s2);
        
        c.add(Calendar.DATE, s1); // Adding days
        
        String output = sdf.format(c.getTime());

        search=output;
     
        findUsers();
     
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        findUsers();
     
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        HomePanel p1 = new HomePanel();
                            p1.setSize(949, 100);
                            p1.setLocation(0, 0);
                            
                            Panel11.setLayout(new GridLayout(0,1));
                            Panel11.removeAll();
                            Panel11.add(p1,BorderLayout.PAGE_END);
                            Panel11.revalidate();
                            Panel11.repaint();
    }//GEN-LAST:event_jButton6ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable asvdasvdjTable1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1asdcasdcascd;
    // End of variables declaration//GEN-END:variables
}
