/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fitnessmanagersystem;

import static fitnessmanagersystem.GUI.Panel11;
//import static fitnessmanagersystem.GUI.jButton1;
import java.awt.BorderLayout;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.HeadlessException;

import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Arrays;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import org.jdesktop.swingx.prompt.PromptSupport;

/**
 *
 * @author DISHLIEV
 */
public class AddAdministrator1 extends javax.swing.JPanel {

    /**
     * Creates new form AddAdministrator1
     */
    
    public AddAdministrator1() {
        initComponents();
    
    }
  
public Connection getConnection()
   {
    
       Connection con;
    
       try {
           con = DriverManager.getConnection("jdbc:mysql://localhost/fitness-manager-system?characterEncoding=utf8", "root","");
           //
           return con;
       } catch (Exception e) {
           return null;
       }
   }
     public void executeSQlQuery(String query, String message)
   {
       Connection con = getConnection();
       Statement st;
       try{
           st = con.createStatement();
          if((st.executeUpdate(query)) == 1)
          {

               
        //       JOptionPane.showMessageDialog(null, "Данните са "+message+" Успешно!");
           }else{
               JOptionPane.showMessageDialog(null, "Данните не са "+message);
          }
       }catch(SQLException | HeadlessException ex){
       }
   }
     
      public void changed() {  
     if(jCheckBox_dataAdmin.isSelected()) {
     if (jTextField_idADMIN.getText().equals("")||
             jTextField_fNameAdmin.getText().equals("")||
             jTextField_lNameAdmin.getText().equals("")||
             jTextField_username.getText().equals("")||
             jPasswordField1.getText().equals("")||
             jPasswordField2.getText().equals("")||
             jTextField_middleName.getText().equals("")||
             jTextField_AdminAge.getText().equals("")||
             jComboBox_Sex.getSelectedItem().toString().equals("")||
             jComboBox_City.getSelectedItem().toString().equals("")||
          
             jTextField_Street.getText().equals("")||
             jTextField_Telephone.getText().equals("")||
             jTextField_Email.getText().equals("")||
             jTextArea_info.getText().equals("")
             
             ){
       jButton11111111.setEnabled(false);
     }
     else {
       jButton11111111.setEnabled(true);
    }

  }
      else { if (jTextField_idADMIN.getText().equals("")||jTextField_fNameAdmin.getText().equals("")||jTextField_lNameAdmin.getText().equals("")||jTextField_username.getText().equals("")||jPasswordField1.getText().equals("")||jPasswordField2.getText().equals("")){
       jButton11111111.setEnabled(false);
     }
     else {
       jButton11111111.setEnabled(true);
    }
}}
 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton11111111 = new javax.swing.JButton();
        jTextField_username = new javax.swing.JTextField();
        jPasswordField1 = new javax.swing.JPasswordField();
        jPasswordField2 = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTextField_middleName = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jComboBox_Sex = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextField_AdminAge = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jTextField_Street = new javax.swing.JTextField();
        jComboBox_City = new javax.swing.JComboBox();
        jCheckBox_dataAdmin = new javax.swing.JCheckBox();
        jTextField_idADMIN = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jTextField_fNameAdmin = new javax.swing.JTextField();
        jTextField_lNameAdmin = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTextField_Telephone = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jTextField_Email = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea_info = new javax.swing.JTextArea();
        jLabel18 = new javax.swing.JLabel();
        jCheckBox1administrator = new javax.swing.JCheckBox();
        jCheckBox2instruktor = new javax.swing.JCheckBox();

        setBackground(new java.awt.Color(204, 204, 204));
        setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setText("Парола:");

        jLabel3.setText("Повтори парола:");

        jButton11111111.setIcon(new javax.swing.ImageIcon("C:\\Users\\DISHLIEV\\Documents\\1\\FitnessManagerSystem\\icons\\gnome_media_floppy.png")); // NOI18N
        jButton11111111.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11111111ActionPerformed(evt);
            }
        });

        jTextField_username.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_usernameKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_usernameKeyTyped(evt);
            }
        });

        jPasswordField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPasswordField1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jPasswordField1KeyTyped(evt);
            }
        });

        jPasswordField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPasswordField2KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jPasswordField2KeyTyped(evt);
            }
        });

        jLabel4.setText("Добавяне на нов служител:");

        jButton2.setIcon(new javax.swing.ImageIcon("C:\\Users\\DISHLIEV\\Documents\\1\\FitnessManagerSystem\\icons\\cancel.png")); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel5.setText("Презиме:");

        jTextField_middleName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_middleNameKeyTyped(evt);
            }
        });

        jLabel7.setText("Пол:");

        jComboBox_Sex.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "мъж", "жена" }));
        jComboBox_Sex.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox_SexMouseClicked(evt);
            }
        });
        jComboBox_Sex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_SexActionPerformed(evt);
            }
        });
        jComboBox_Sex.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jComboBox_SexKeyTyped(evt);
            }
        });

        jLabel8.setText("username:");

        jLabel9.setText("Дата на раждане:");

        jTextField_AdminAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_AdminAgeActionPerformed(evt);
            }
        });
        jTextField_AdminAge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_AdminAgeKeyTyped(evt);
            }
        });

        jLabel11.setText("Град:");

        jLabel12.setText("Улица:");

        jTextField_Street.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_StreetKeyTyped(evt);
            }
        });

        jComboBox_City.setEditable(true);
        jComboBox_City.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Айтос ", "Асеновград ", "Ахтопол ", "Балчик ", "Банкя", "Банско ", "Батак ", "Белене", "Белица ", "Белослав  ", "Берковица ", "Битоля ", "Благоевград ", "Ботевград", "Брацигово ", "Брезник ", "Бургас ", "Бяла ", "Варна ", "Велес", "Велики Преслав ", "Велико Търново ", "Велинград ", "Видин ", "Враца ", "Вършец ", "Габрово ", "Гевгели", "Горна Оряховица", "Гоце Делчев ", "Гюмюрджина ", "Дедеагач ", "Демир Хисар ", "Димитровград ", "Добрич ", "Дойран ", "Долна Баня ", "Долна Оряховица ", "Долни Дъбник ", "Драма ", "Дупница ", "Елена ", "Исперих ", "Ихтиман ", "Кавала ", "Каварна ", "Казанлък ", "Калофер ", "Карлово ", "Карнобат ", "Кешан ", "Китен ", "Козлодуй ", "Копривщица ", "Костенец ", "Костур ", "Котел ", "Кресна", "Крушево ", "Ксанти ", "Кукуш ", "Кърджали ", "Кюстендил ", "Лерин ", "Ловеч ", "Лозенград ", "Лом ", "Люле Бургас ", "Мадан ", "Мелник " }));
        jComboBox_City.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_CityActionPerformed(evt);
            }
        });
        jComboBox_City.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox_CityKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jComboBox_CityKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jComboBox_CityKeyTyped(evt);
            }
        });

        jCheckBox_dataAdmin.setText("Данни за администратора");
        jCheckBox_dataAdmin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox_dataAdminMouseClicked(evt);
            }
        });
        jCheckBox_dataAdmin.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBox_dataAdminStateChanged(evt);
            }
        });
        jCheckBox_dataAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_dataAdminActionPerformed(evt);
            }
        });

        jTextField_idADMIN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_idADMINKeyTyped(evt);
            }
        });

        jLabel10.setText("ID номер:");

        jLabel13.setText("Фамилия:");

        jTextField_fNameAdmin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_fNameAdminKeyTyped(evt);
            }
        });

        jTextField_lNameAdmin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_lNameAdminKeyTyped(evt);
            }
        });

        jLabel14.setText("Име:");

        jTextField_Telephone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_TelephoneKeyTyped(evt);
            }
        });

        jLabel16.setText("Телефон:");

        jLabel17.setText("Емайл:");

        jTextField_Email.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_EmailKeyTyped(evt);
            }
        });

        jTextArea_info.setColumns(20);
        jTextArea_info.setRows(5);
        jTextArea_info.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextArea_infoKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(jTextArea_info);

        jLabel18.setText("Бележка:");

        jCheckBox1administrator.setText("администратор");
        jCheckBox1administrator.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox1administratorMouseClicked(evt);
            }
        });

        jCheckBox2instruktor.setText("инструктор");
        jCheckBox2instruktor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox2instruktorMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(509, 509, 509)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox_dataAdmin)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel9)
                            .addComponent(jLabel7)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel16)
                            .addComponent(jLabel17)
                            .addComponent(jLabel18))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextField_Email)
                                .addComponent(jComboBox_Sex, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextField_AdminAge)
                                .addComponent(jTextField_middleName, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                                .addComponent(jComboBox_City, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextField_Street, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                                .addComponent(jTextField_Telephone)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(28, 28, 28)
                        .addComponent(jCheckBox1administrator)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox2instruktor)
                        .addGap(924, 924, 924))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTextField_fNameAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                                            .addComponent(jTextField_lNameAdmin)
                                            .addComponent(jTextField_username)
                                            .addComponent(jPasswordField1)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jPasswordField2, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton11111111)
                                .addGap(51, 51, 51)
                                .addComponent(jButton2))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField_idADMIN, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(974, 974, 974))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jCheckBox_dataAdmin)
                    .addComponent(jCheckBox1administrator)
                    .addComponent(jCheckBox2instruktor))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_middleName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_AdminAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox_Sex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jComboBox_City, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(jTextField_Street, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(jTextField_Telephone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_Email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18))
                        .addGap(134, 134, 134))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField_idADMIN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_fNameAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_lNameAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jPasswordField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(149, 149, 149)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton11111111)
                            .addComponent(jButton2))
                        .addContainerGap(116, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton11111111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11111111ActionPerformed
    
         if(jCheckBox1administrator.isSelected()) {
        if(jCheckBox_dataAdmin.isSelected()) {
            
               String p1 =jPasswordField1.getText();
            String p2 =jPasswordField2.getText();
         if (p1 == null ? p2 == null : p1.equals(p2)) {
                

        String query =
                    "INSERT INTO `admins`(`id`,`firstName`,`lastName`,`username`, `password`, `type`) VALUES ("
                + "'"+jTextField_idADMIN.getText()+
                "','"+jTextField_fNameAdmin.getText()+
                "','"+jTextField_lNameAdmin.getText()+
                "','"+jTextField_username.getText()+
                "','"+ jPasswordField2.getText()+
                "','"+jCheckBox1administrator.getText()+"')";
        
     //   executeSQlQuery(query, "Въведени");
            
           String query1 =
                    "INSERT INTO `admins_info`(`id`,`firstName`,`middleName`,`lastName`,`age`,`sex`,`city`,`street`,`telephone`,`email`,`info`) VALUES ("
                   + "'"+jTextField_idADMIN.getText()+
                   "','"+jTextField_fNameAdmin.getText()+
                   "','"+jTextField_middleName.getText()+
                   "','"+jTextField_lNameAdmin.getText()+
                   "','"+jTextField_AdminAge.getText()+
                   "','"+ jComboBox_Sex.getSelectedItem().toString()+
                   "','"+ jComboBox_City.getSelectedItem().toString()
                   +"','"+jTextField_Street.getText()+
                   "','"+jTextField_Telephone.getText()+
                   "','"+ jTextField_Email.getText()+
                   "','"+ jTextArea_info.getText()+"')";
            executeSQlQuery(query,"");
             executeSQlQuery(query1,"ddd");
        }
   
         else { 
        JOptionPane.showMessageDialog(null, "aaa");

}
         
                    
   // save data
} else  {
            String p1 =jPasswordField1.getText();
            String p2 =jPasswordField2.getText();
         if (p1 == null ? p2 == null : p1.equals(p2)) {
        String query =
                    "INSERT INTO `admins`(`id`,`firstName`,`lastName`,`username`, `password`,`type`) VALUES ('"+jTextField_idADMIN.getText()+"','"+jTextField_fNameAdmin.getText()+"','"+jTextField_lNameAdmin.getText()+"','"+jTextField_username.getText()+ "','"+ jPasswordField2.getText()+"','"+jCheckBox1administrator.getText()+"')";
            executeSQlQuery(query, "Въведени");
            
          
         }

             
          else {
                 JOptionPane.showMessageDialog(null, "aaa");
         }
}
      
        
        
         }else if (jCheckBox2instruktor.isSelected()){  //instruktor
             if(jCheckBox_dataAdmin.isSelected()) {
            
            String p1 =jPasswordField1.getText();
            String p2 =jPasswordField2.getText();
            
        

         
  
}}
         
    }//GEN-LAST:event_jButton11111111ActionPerformed

    private void jTextField_usernameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_usernameKeyPressed
    if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
        
           String p1 =jPasswordField1.getText();
            String p2 =jPasswordField2.getText();
         if (p1 == null ? p2 == null : p1.equals(p2)){
        String query =
                    "INSERT INTO `login`(`id``username`, `password`) VALUES ('"+jTextField_idADMIN.getText()+"','"+jTextField_username.getText()+"','"+jPasswordField2.getText()+"')";
            executeSQlQuery(query, "Въведени");
            
          
            
          
   // save data
} else {
  // do other stuff
      JOptionPane.showMessageDialog(null, "aaa");
}}
    }//GEN-LAST:event_jTextField_usernameKeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
          Administrator p1 = new Administrator();
                            p1.setSize(949, 100);
                            p1.setLocation(0, 0);
                            
                            Panel11.setLayout(new GridLayout(0,1));
                            Panel11.removeAll();
                            Panel11.add(p1,BorderLayout.PAGE_END);
                            Panel11.revalidate();
                            Panel11.repaint();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox_CityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_CityActionPerformed
    ((JTextField)jComboBox_City.getEditor().getEditorComponent()).getDocument().addDocumentListener(new DocumentListener() {

     @Override
     public void insertUpdate(DocumentEvent e) {
changed();      }

     @Override
     public void removeUpdate(DocumentEvent e) {
changed();      }

     @Override
     public void changedUpdate(DocumentEvent e) {
changed();     }
 });
    }//GEN-LAST:event_jComboBox_CityActionPerformed

    private void jCheckBox_dataAdminStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBox_dataAdminStateChanged
 
    }//GEN-LAST:event_jCheckBox_dataAdminStateChanged

    private void jCheckBox_dataAdminMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox_dataAdminMouseClicked
boolean isSelected = jCheckBox_dataAdmin.isSelected();

if(isSelected ){
      jCheckBox_dataAdmin.setEnabled(true);
     
        jTextField_middleName.setEnabled(true);
     
        jComboBox_Sex.setEnabled(true);
        jTextField_AdminAge.setEnabled(true);
        jComboBox_City.setEnabled(true);
        jTextField_Street.setEnabled(true);
        jTextField_Telephone.setEnabled(true);
    jTextField_Email.setEnabled(true);
    jTextArea_info.setEnabled(true);
    
  changed();
 //jCheckBox1.setSelected(false);
} else {
      jCheckBox_dataAdmin.setEnabled(false);
      
        jTextField_middleName.setEnabled(false);
     
        jComboBox_Sex.setEnabled(false);
        jTextField_AdminAge.setEnabled(false);
        jComboBox_City.setEnabled(false);
        jTextField_Street.setEnabled(false);
            jTextField_Telephone.setEnabled(false);
             jTextField_Email.setEnabled(false);
              jTextArea_info.setEnabled(false);
              changed();
           
        jCheckBox_dataAdmin.setEnabled(true);
   jCheckBox_dataAdmin.setSelected(false);
 
  
}
        
        
        
        
      
    }//GEN-LAST:event_jCheckBox_dataAdminMouseClicked

    private void jCheckBox_dataAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_dataAdminActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox_dataAdminActionPerformed

    private void jTextField_idADMINKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_idADMINKeyTyped
   jTextField_idADMIN.getDocument().addDocumentListener(new DocumentListener() {
  @Override
  public void changedUpdate(DocumentEvent e) {
    changed();
  }
  @Override
  public void removeUpdate(DocumentEvent e) {
    changed();
  }
  @Override
  public void insertUpdate(DocumentEvent e) {
    changed();
  }});
    }//GEN-LAST:event_jTextField_idADMINKeyTyped

    private void jTextField_fNameAdminKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_fNameAdminKeyTyped
        jTextField_fNameAdmin.getDocument().addDocumentListener(new DocumentListener() {
  @Override
  public void changedUpdate(DocumentEvent e) {
    changed();
  }
  @Override
  public void removeUpdate(DocumentEvent e) {
    changed();
  }
  @Override
  public void insertUpdate(DocumentEvent e) {
    changed();
  }});
    }//GEN-LAST:event_jTextField_fNameAdminKeyTyped

    private void jTextField_lNameAdminKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_lNameAdminKeyTyped
     jTextField_lNameAdmin.getDocument().addDocumentListener(new DocumentListener() {
  @Override
  public void changedUpdate(DocumentEvent e) {
    changed();
  }
  @Override
  public void removeUpdate(DocumentEvent e) {
    changed();
  }
  @Override
  public void insertUpdate(DocumentEvent e) {
    changed();
  }});
    }//GEN-LAST:event_jTextField_lNameAdminKeyTyped

    private void jTextField_usernameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_usernameKeyTyped
    jTextField_username.getDocument().addDocumentListener(new DocumentListener() {
  @Override
  public void changedUpdate(DocumentEvent e) {
    changed();
  }
  @Override
  public void removeUpdate(DocumentEvent e) {
    changed();
  }
  @Override
  public void insertUpdate(DocumentEvent e) {
    changed();
  }});
    }//GEN-LAST:event_jTextField_usernameKeyTyped

    private void jTextField_middleNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_middleNameKeyTyped
            jTextField_middleName.getDocument().addDocumentListener(new DocumentListener() {
  @Override
  public void changedUpdate(DocumentEvent e) {
    changed();
  }
  @Override
  public void removeUpdate(DocumentEvent e) {
    changed();
  }
  @Override
  public void insertUpdate(DocumentEvent e) {
    changed();
  }});
    }//GEN-LAST:event_jTextField_middleNameKeyTyped

    private void jTextField_AdminAgeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_AdminAgeKeyTyped
  JTextField unicorns =  jTextField_AdminAge;
   PromptSupport.setPrompt("дд/мм/гггг", unicorns);
     
                PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.SHOW_PROMPT, unicorns);

                PromptSupport.setFontStyle(Font.BOLD, unicorns);
        
        
        jTextField_AdminAge.getDocument().addDocumentListener(new DocumentListener() {
  @Override
  public void changedUpdate(DocumentEvent e) {
    changed();
  }
  @Override
  public void removeUpdate(DocumentEvent e) {
    changed();
  }
  @Override
  public void insertUpdate(DocumentEvent e) {
    changed();
  }});
    }//GEN-LAST:event_jTextField_AdminAgeKeyTyped

    private void jComboBox_SexKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox_SexKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_SexKeyTyped

    private void jComboBox_SexMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox_SexMouseClicked

    }//GEN-LAST:event_jComboBox_SexMouseClicked

    private void jComboBox_SexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_SexActionPerformed
 ((JTextField)jComboBox_Sex.getEditor().getEditorComponent()).getDocument().addDocumentListener(new DocumentListener() {

     @Override
     public void insertUpdate(DocumentEvent e) {
changed();      }

     @Override
     public void removeUpdate(DocumentEvent e) {
changed();      }

     @Override
     public void changedUpdate(DocumentEvent e) {
changed();     }
 });
    }//GEN-LAST:event_jComboBox_SexActionPerformed

    private void jTextField_StreetKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_StreetKeyTyped
        jTextField_Street.getDocument().addDocumentListener(new DocumentListener() {
  @Override
  public void changedUpdate(DocumentEvent e) {
    changed();
  }
  @Override
  public void removeUpdate(DocumentEvent e) {
    changed();
  }
  @Override
  public void insertUpdate(DocumentEvent e) {
    changed();
  }});
    }//GEN-LAST:event_jTextField_StreetKeyTyped

    private void jTextField_TelephoneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_TelephoneKeyTyped
      jTextField_Telephone.getDocument().addDocumentListener(new DocumentListener() {
  @Override
  public void changedUpdate(DocumentEvent e) {
    changed();
  }
  @Override
  public void removeUpdate(DocumentEvent e) {
    changed();
  }
  @Override
  public void insertUpdate(DocumentEvent e) {
    changed();
  }});
    }//GEN-LAST:event_jTextField_TelephoneKeyTyped

    private void jTextField_EmailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_EmailKeyTyped
     jTextField_Email.getDocument().addDocumentListener(new DocumentListener() {
  @Override
  public void changedUpdate(DocumentEvent e) {
    changed();
  }
  @Override
  public void removeUpdate(DocumentEvent e) {
    changed();
  }
  @Override
  public void insertUpdate(DocumentEvent e) {
    changed();
  }});
    }//GEN-LAST:event_jTextField_EmailKeyTyped

    private void jTextArea_infoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextArea_infoKeyTyped
        jTextArea_info.getDocument().addDocumentListener(new DocumentListener() {
  @Override
  public void changedUpdate(DocumentEvent e) {
    changed();
  }
  @Override
  public void removeUpdate(DocumentEvent e) {
    changed();
  }
  @Override
  public void insertUpdate(DocumentEvent e) {
    changed();
  }});
    }//GEN-LAST:event_jTextArea_infoKeyTyped

    private void jComboBox_CityKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox_CityKeyTyped
 
        ((JTextField) jComboBox_City.getEditor().getEditorComponent()).getDocument().addDocumentListener(new DocumentListener() {

     @Override
     public void insertUpdate(DocumentEvent e) {
changed();      }

     @Override
     public void removeUpdate(DocumentEvent e) {
changed();      }

     @Override
     public void changedUpdate(DocumentEvent e) {
changed();     }
 });
    }//GEN-LAST:event_jComboBox_CityKeyTyped

    private void jComboBox_CityKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox_CityKeyPressed
     ((JTextField) jComboBox_City.getEditor().getEditorComponent()).getDocument().addDocumentListener(new DocumentListener() {

     @Override
     public void insertUpdate(DocumentEvent e) {
changed();      }

     @Override
     public void removeUpdate(DocumentEvent e) {
changed();      }

     @Override
     public void changedUpdate(DocumentEvent e) {
changed();     }
 });
    }//GEN-LAST:event_jComboBox_CityKeyPressed

    private void jComboBox_CityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox_CityKeyReleased
         ((JTextField) jComboBox_City.getEditor().getEditorComponent()).getDocument().addDocumentListener(new DocumentListener() {

     @Override
     public void insertUpdate(DocumentEvent e) {
changed();      }

     @Override
     public void removeUpdate(DocumentEvent e) {
changed();      }

     @Override
     public void changedUpdate(DocumentEvent e) {
changed();     }
 });
    }//GEN-LAST:event_jComboBox_CityKeyReleased

    private void jPasswordField2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField2KeyTyped
        jPasswordField2.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void changedUpdate(DocumentEvent e) {
                changed();
            }
            @Override
            public void removeUpdate(DocumentEvent e) {
                changed();
            }
            @Override
            public void insertUpdate(DocumentEvent e) {
                changed();
            }});
    }//GEN-LAST:event_jPasswordField2KeyTyped

    private void jPasswordField2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField2KeyPressed

        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {     if(jCheckBox_dataAdmin.isSelected()) {
            if (Arrays.equals(jPasswordField1.getPassword(), jPasswordField2.getPassword())) {
                String query =
                "INSERT INTO `admins`(`id`,`firstName`,`lastName`,`username`, `password`) VALUES ('"+jTextField_idADMIN.getText()+"','"+jTextField_fNameAdmin.getText()+"','"+jTextField_lNameAdmin.getText()+"','"+jTextField_username.getText()+"','"+jPasswordField1.getPassword()+"')";

                executeSQlQuery(query, "Въведени");

            }
            if (Arrays.equals(jPasswordField1.getPassword(), jPasswordField2.getPassword())) {
                String query =
                "INSERT INTO `adminsInfo`(`id`,`firstName`,`middleName`,`lastName`,`age`,`sex`,`city`,`street`,`telephone`,`email`,`info`) VALUES ('"+jTextField_idADMIN.getText()+"','"+jTextField_fNameAdmin.getText()+"','"+"','"+jTextField_middleName.getText()+"','"+jTextField_lNameAdmin.getText()+"','"+"','"+jTextField_AdminAge.getText()+"','"+"','"+ jComboBox_Sex.getSelectedItem().toString()+"','"+"','"+ jComboBox_City.getSelectedItem().toString()+"','"+"','"+   jTextField_Street.getText()+"','"+"','"+ jTextField_Telephone.getText()+"','"+ jTextField_Email.getText()+"','"+ jTextArea_info.getText()+"','"+jTextField_username.getText()+"','"+jPasswordField1.getPassword()+"')";
                executeSQlQuery(query, "Въведени");

            }
            /* if (Arrays.equals(jPasswordField1.getPassword(), jPasswordField2.getPassword())) {
                String query =
                "INSERT INTO `admins`(`id`,`firstName`,`lastName`,`username`, `password`) VALUES ('"+jTextField_id.getText()+"','"+jTextField_fNameAdmin.getText()+"','"+jTextField_lNameAdmin.getText()+"','"+jTextField1.getText()+"','"+jPasswordField1.getPassword()+"')";
                executeSQlQuery(query, "Въведени");

                jTextField1.setText("");
                jPasswordField1.setText("");
                jPasswordField2.setText("");
            }*/
            else {
                JOptionPane.showMessageDialog(null, "aaa");

            }

            // save data
        } else  {
            if (Arrays.equals(jPasswordField1.getPassword(), jPasswordField2.getPassword())) {
                String query =
                "INSERT INTO `admins`(`id`,`firstName`,`lastName`,`username`, `password`) VALUES ('"+jTextField_idADMIN.getText()+"','"+jTextField_fNameAdmin.getText()+"','"+jTextField_lNameAdmin.getText()+"','"+jTextField_username.getText()+"','"+jPasswordField1.getPassword()+"')";
                executeSQlQuery(query, "Въведени");

            }

            else {
                JOptionPane.showMessageDialog(null, "aaa");
            }
        }}

    }//GEN-LAST:event_jPasswordField2KeyPressed

    private void jPasswordField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField1KeyTyped
        jPasswordField1.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void changedUpdate(DocumentEvent e) {
                changed();
            }
            @Override
            public void removeUpdate(DocumentEvent e) {
                changed();
            }
            @Override
            public void insertUpdate(DocumentEvent e) {
                changed();
            }});
    }//GEN-LAST:event_jPasswordField1KeyTyped

    private void jPasswordField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField1KeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {

            if (Arrays.equals(jPasswordField1.getPassword(), jPasswordField1.getPassword())) {
                String query =
                "INSERT INTO `login`(`id``username`, `password`) VALUES ('"+jTextField_idADMIN.getText()+"','"+jTextField_username.getText()+"','"+jPasswordField1.getPassword()+"')";
                executeSQlQuery(query, "Въведени");

                jTextField_username.setText("");
                jPasswordField1.setText("");
                jPasswordField2.setText("");
                // save data
            } else {
                // do other stuff
                JOptionPane.showMessageDialog(null, "aaa");
            }}
    }//GEN-LAST:event_jPasswordField1KeyPressed

    private void jTextField_AdminAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_AdminAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_AdminAgeActionPerformed

    private void jCheckBox1administratorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox1administratorMouseClicked
jCheckBox2instruktor.setSelected(false);
        
        
        try
        {
            Connection con;
            Statement st;
            ResultSet rs;

            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            con=DriverManager.getConnection("jdbc:mysql://localhost/fitness-manager-system?characterEncoding=utf8", "root","");
            st=con.createStatement();
            rs=st.executeQuery("select max(id) from admins");
           
            int i=100;
         
            while (rs.next())
            {
             
                i=rs.getInt(1)+1;
      
            }
       
            jTextField_idADMIN.setText(""+i); 
            con.close();
            st.close();
            rs.close();
        }
        catch (ClassNotFoundException | SQLException e)
        {
        }
    
    }//GEN-LAST:event_jCheckBox1administratorMouseClicked

    private void jCheckBox2instruktorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox2instruktorMouseClicked
jCheckBox1administrator.setSelected(false);
        
        try
        {
            Connection con;
            Statement st;
            ResultSet rs;

            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            con=DriverManager.getConnection("jdbc:mysql://localhost/fitness-manager-system?characterEncoding=utf8", "root","");
            st=con.createStatement();
            rs=st.executeQuery("select max(id) from trainerlogin");
           
            int i=100;
         
            while (rs.next())
            {
             
                i=rs.getInt(1)+100;
      
            }
       
            jTextField_idADMIN.setText(""+i); 
            con.close();
            st.close();
            rs.close();
        }
        catch (ClassNotFoundException | SQLException e)
        {
        }
    }//GEN-LAST:event_jCheckBox2instruktorMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton jButton11111111;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1administrator;
    private javax.swing.JCheckBox jCheckBox2instruktor;
    public static javax.swing.JCheckBox jCheckBox_dataAdmin;
    public static javax.swing.JComboBox jComboBox_City;
    public static javax.swing.JComboBox jComboBox_Sex;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JPasswordField jPasswordField2;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTextArea jTextArea_info;
    public static javax.swing.JTextField jTextField_AdminAge;
    public static javax.swing.JTextField jTextField_Email;
    public static javax.swing.JTextField jTextField_Street;
    public static javax.swing.JTextField jTextField_Telephone;
    public static javax.swing.JTextField jTextField_fNameAdmin;
    public static javax.swing.JTextField jTextField_idADMIN;
    public static javax.swing.JTextField jTextField_lNameAdmin;
    public static javax.swing.JTextField jTextField_middleName;
    private javax.swing.JTextField jTextField_username;
    // End of variables declaration//GEN-END:variables
}
