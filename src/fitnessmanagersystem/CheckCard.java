/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fitnessmanagersystem;

import static fitnessmanagersystem.GUI.Panel11;
import java.awt.BorderLayout;
import java.awt.GridLayout;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author DISHLIEV
 */
public class CheckCard extends javax.swing.JPanel {

    /**
     * Creates new form CheckCard
     */
    public CheckCard() {
        initComponents();
    }
             public Connection getConnection()
   {
       Connection con;
    
       try {
           con = DriverManager.getConnection("jdbc:mysql://localhost/fitness-manager-system?characterEncoding=utf8", "root","");
           
           return con;
       } catch (Exception e) {
           e.printStackTrace();
           return null;
       }
   }
public void executeSQlQuery(String query, String message)
   {
       Connection con = getConnection();
       Statement st;
   
       try{
       
           st = con.createStatement();
          if((st.executeUpdate(query)) == 1)
          {

               
        
           }else{
              
          }
       }catch(Exception ex){
           ex.printStackTrace();
       }
   }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1_id_nomer = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1asdasdcascascdascascasc = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField2minutittt = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jButton3 = new javax.swing.JButton();

        jTextField1_id_nomer.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jTextField1_id_nomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1_id_nomerActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setText("ID номер:");

        jButton1.setIcon(new javax.swing.ImageIcon("C:\\Users\\DISHLIEV\\Documents\\1\\FitnessManagerSystem\\icons\\stock_task_small.png")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("Фитнес карти");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setText("Солариум карти");

        jTextField1asdasdcascascdascascasc.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel5.setText("Минути:");

        jTextField2minutittt.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N

        jButton2.setIcon(new javax.swing.ImageIcon("C:\\Users\\DISHLIEV\\Documents\\1\\FitnessManagerSystem\\icons\\stock_task_small.png")); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel6.setText("ID номер:");

        jButton3.setIcon(new javax.swing.ImageIcon("C:\\Users\\DISHLIEV\\Documents\\1\\FitnessManagerSystem\\icons\\cancel.png")); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 578, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(26, 26, 26)
                        .addComponent(jTextField1_id_nomer, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jButton1)))
                .addContainerGap(178, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField1asdasdcascascdascascasc, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(jButton2))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField2minutittt, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton3))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel3)))
                .addGap(35, 35, 35))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jTextField1_id_nomer, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField1asdasdcascascdascascasc, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(3, 3, 3))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jButton2)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField2minutittt, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3))))
                .addGap(75, 75, 75))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1_id_nomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1_id_nomerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1_id_nomerActionPerformed

    @SuppressWarnings("null")
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        Connection con = null;

        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost/fitness-manager-system?characterEncoding=utf8", "root", "");
        } catch (SQLException ex) {
            Logger.getLogger(CheckCard.class.getName()).log(Level.SEVERE, null, ex);
        }
        Statement sta;
        ResultSet rs;
        try {
            sta = con.createStatement();
            rs = sta.executeQuery("SELECT `visits`,`periodDays` FROM `clients_cards` " + "WHERE `id` = " + jTextField1_id_nomer.getText());
            while (rs.next()) {
                int visits = rs.getInt("visits");
                String periodDays = rs.getString("periodDays");

                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");

                Calendar c = Calendar.getInstance();
                c.setTime(new Date()); // днешна дата
                String output = sdf.format(c.getTime());

                try {
                    String date1 = periodDays;
                    String date2 = output;
                    Date start = new SimpleDateFormat("dd/MM/yyyy", Locale.ENGLISH)
                            .parse(date1);
                    Date end = new SimpleDateFormat("dd/MM/yyyy", Locale.ENGLISH)
                            .parse(date2);

                    //ако не е изтекла и има налични посещения
                    if (start.compareTo(end) >= 0 & visits > 0) {
                        JOptionPane.showMessageDialog(null, " Готово", "Съобщение", JOptionPane.INFORMATION_MESSAGE);
                        String query = "UPDATE `clients_cards` SET `visits`=`visits`- 1" + " WHERE `id` = " + jTextField1_id_nomer.getText();
                        executeSQlQuery(query, "Променени");

                        //изтекла ли е по период       
                    } else if (start.compareTo(end) < 0) {

                        JOptionPane.showMessageDialog(null, "Kартата е изтекла!", "Съобщение", JOptionPane.ERROR_MESSAGE);

                        //изтекла ли е по период, и ако не е и посещенията са по малко от 0 (значи е без ограничение на посещенията)  
                    } else if (start.compareTo(end) >= 0 & visits < 0) {
                        JOptionPane.showMessageDialog(null, " Готово", "Съобщение", JOptionPane.INFORMATION_MESSAGE);
                    } else if (start.compareTo(end) >= 0 & visits == 0) {
                        JOptionPane.showMessageDialog(null, " Няма налични посещения.", "Съобщение", JOptionPane.ERROR_MESSAGE);

                    }
                } catch (ParseException | HeadlessException e) {
                }
            }

        } catch (SQLException ex) {
            Logger.getLogger(CheckCard.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    @SuppressWarnings("null")
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
      
        Connection con = null;

        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost/fitness-manager-system?characterEncoding=utf8", "root", "");
        } catch (SQLException ex) {
            Logger.getLogger(CheckCard.class.getName()).log(Level.SEVERE, null, ex);
        }
        Statement sta;
        ResultSet rs;
        try {
            sta = con.createStatement();
            rs = sta.executeQuery("SELECT `minutes`,`periodDays` FROM `solarium_clients_cards` " + "WHERE `id` = " 
                    + jTextField1asdasdcascascdascascasc.getText());
            while (rs.next()) {
                int minutes = rs.getInt("minutes");
                String periodDays = rs.getString("periodDays");

                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");

                Calendar c = Calendar.getInstance();
                c.setTime(new Date()); // днешна дата
                String output = sdf.format(c.getTime());

                try {
                    String date1 = periodDays;
                    String date2 = output;
                    Date start = new SimpleDateFormat("dd/MM/yyyy", Locale.ENGLISH)
                            .parse(date1);
                    Date end = new SimpleDateFormat("dd/MM/yyyy", Locale.ENGLISH)
                            .parse(date2);
                    //ако не е изтекла и има налични минути
                    if (start.compareTo(end) >= 0 & minutes > 0) {
                        String min = jTextField2minutittt.getText();
                        Integer x = Integer.valueOf(min);

                        if (x <= minutes) {
                            String query = "UPDATE `solarium_clients_cards` SET `minutes`=`minutes`-" + jTextField2minutittt.getText() + "" 
                                    + " WHERE `id` = " + jTextField1asdasdcascascdascascasc.getText();
                            executeSQlQuery(query, "Променени");
                            JOptionPane.showMessageDialog(null, " Готово", "Съобщение", JOptionPane.INFORMATION_MESSAGE);

                        } else {
                            JOptionPane.showMessageDialog(null, "Няма толкова налични минути.", "Съобщение", JOptionPane.ERROR_MESSAGE);
                        }

                        //изтекла ли е по период       
                    } else if (start.compareTo(end) < 0) {

                        JOptionPane.showMessageDialog(null, "Kартата е изтекла!", "Съобщение", JOptionPane.ERROR_MESSAGE);

                        //изтекла ли е по период, и ако не е и минутите са по малко или = 0
                    } else if (start.compareTo(end) >= 0 & minutes <= 0) {
                        JOptionPane.showMessageDialog(null, "Няма налични минути.", "Съобщение", JOptionPane.ERROR_MESSAGE);

                    } else {

                    }

                } catch (ParseException | HeadlessException e) {

                }
            }

        } catch (SQLException ex) {
            Logger.getLogger(CheckCard.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
     HomePanel p1 = new HomePanel();
                            p1.setSize(949, 100);
                            p1.setLocation(0, 0);
                            
                            Panel11.setLayout(new GridLayout(0,1));
                            Panel11.removeAll();
                            Panel11.add(p1,BorderLayout.PAGE_END);
                            Panel11.revalidate();
                            Panel11.repaint();
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField1_id_nomer;
    private javax.swing.JTextField jTextField1asdasdcascascdascascasc;
    private javax.swing.JTextField jTextField2minutittt;
    // End of variables declaration//GEN-END:variables
}
